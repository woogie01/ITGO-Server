name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # ✅ 1. 빌드 Job (모든 PR & Push에서 실행됨)
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Gradle
      run: ./gradlew clean build -x test

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Docker Build and Push
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/itgo_server:latest .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/itgo_server:latest

  # ✅ 2. 배포 Job (main에 push 될 때만 실행됨)
  deploy:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd ~/ITGO-Server
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/itgo_server:latest
          docker stop itgo_app || true
          docker rm itgo_app || true
          docker run -d -p 8080:8080 \
            --name itgo_app \
            --env-file .env \
            ${{ secrets.DOCKERHUB_USERNAME }}/itgo_server:latest
